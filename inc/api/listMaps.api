<?php header('Content-type: application/json; charset=utf8'); header("Access-Control-Allow-Origin: *"); error_reporting(E_ERROR | E_WARNING | E_PARSE);
include_once "../../../dewshare/site/config/functions.php"; require_once "../core.php"; //error_reporting(E_ALL & ~E_NOTICE);

$filter=''; $and=''; $WHERE=""; $LIMIT=''; $_PAGE[]=''; $ORDER='ORDER by `date` DESC'; $oBY=''; $p='0'; $r='';
if (isset($_GET['o']) && $_GET['o'] != 'views') {
	$oBY = $_SQL->real_escape_string($_GET['o']);
	$ORDER = "ORDER BY `{$oBY}` DESC";
}
if (isset($_GET['gtype']) && !empty($_GET['gtype'])) {
	$filter = $_SQL->real_escape_string($_GET['gtype']);
	$WHERE .= " AND `gametype` = '{$filter}'";
}
if (isset($_GET['map']) && !empty($_GET['map'])) {
	$filter = $_SQL->real_escape_string($_GET['map']);
	$WHERE .= " AND `map` = '{$filter}'";
}
if ( (isset($_GET['creator']) && !empty($_GET['creator']) ) || (isset($_GET['author']) && !empty($_GET['author'])) ) {
	$filter = $_SQL->real_escape_string($_GET['creator']);
	if (!empty($_GET['author'])) $filter=preg_replace('/[^ \w0-9a-zA-Z_-]/','',$_GET['author']);
	$WHERE .= " AND `creator` = '{$filter}'";
}
if (isset($_GET['user']) && !empty($_GET['user'])) {
	$filter = $_SQL->real_escape_string($_GET['user']);
	if (!is_numeric($_GET['user'])) {
		$getuid = $_SQL->query("SELECT id FROM users WHERE `uname` = '{$filter}' OR `alias` = '{$filter}'")->fetch_object();
		$uid = (int) $getuid->id;
		$WHERE .= " AND `uid` = '{$uid}'";
	}else {
		$uid = (int) $_GET['user'];
		$WHERE .= " AND `uid` = '{$uid}'";
	}
}
if (isset($_GET['id']) && is_numeric($_GET['id'])) {
	$filter = (int) $_GET['id'];
	$WHERE .= " AND `id` = '{$filter}'";
}
if (isset($_GET['p']) && is_numeric($_GET['p']) && isset($_GET['r']) && is_numeric($_GET['r'])) {
	$p = (int) $_GET['p'] -1;
	$r = (int) $_GET['r']; 
	$s = ($p) ?  ($p * $r) : 0;
	$LIMIT = "LIMIT {$s}, {$r}";
	$tcount = $_SQL->query("SELECT id FROM `maps` WHERE public != 'n' {$WHERE}") or die($_SQL->error); 
	$total = $tcount->num_rows;
	$page['totalItems'] = "$total";
	$page['currentPage'] = "".($p+1)."";
	$begResult = $s + 1;
	$endResult = $s + $r; if ($endResult > $total) { $endResult = $total; }
	$page['results'] = "".$begResult."-".$endResult." out of ".$page['totalItems'];
	$tc = $_SQL->query("SELECT uid FROM `maps` WHERE public != 'n' {$WHERE} {$LIMIT}") or die($_SQL->error); 
	$t = $tc->num_rows;
	$page['itemsOnPage'] = "$t";
	if ($page['itemsOnPage'] > 0 && $page['itemsOnPage'] < $r) {$page['pagesPossible'] = $page['currentPage'];}
	else { $page['pagesPossible'] = "".ceil($total / $r).""; }
	$_PAGE[] = $page;
}

if (!isset($_GET['map']) && !isset($_GET['creator']) && !isset($_GET['user']) && !isset($_GET['gtype']) && isset($_GET['search']) && preg_match('/^[a-z0-9.\-\_]+$/i', $_GET['search'])) { 
	$sql = $_SQL->query("SELECT *, NULL as url FROM `maps` WHERE 
		`title` LIKE '%{$_GET['search']}%' OR 
		`creator` LIKE '%{$_GET['search']}%' OR 
		`map` LIKE '%{$_GET['search']}%' OR 
		`gametype` LIKE '%{$_GET['search']}%' AND 
		(public != 'n' {$WHERE}) {$ORDER} {$LIMIT}") 
	or die($_SQL->error);	
	if ($sql->num_rows < 1) { 	$sql = $_SQL->query("SELECT *, NULL as url FROM `maps` WHERE public != 'n' {$WHERE} {$ORDER} {$LIMIT}") or die($_SQL->error);	}
} 
else { $sql = $_SQL->query("SELECT *, NULL as url FROM `maps` WHERE public != 'n' {$WHERE} {$ORDER} {$LIMIT}") or die($_SQL->error); }

if (isset ($_GET['o']) && $_GET['o'] == 'views') {
	$sql = $_SQL->query("SELECT m.*, COUNT(v.id) AS views FROM maps AS m LEFT JOIN views AS v ON v.map_id=m.id WHERE public != 'n' {$WHERE} GROUP BY m.id ORDER BY views DESC {$LIMIT}") or die($_SQL->error);
} //die($LIMIT);
while ($forge = $sql->fetch_assoc()) {	
	$submitter = $_SQL->query("SELECT uname FROM users WHERE id = '{$forge['uid']}'");
	$sub = $submitter->fetch_assoc(); $forge['submitter'] = $sub['uname'];
	$forge['url'] = "http://haloshare.org/forge.php?id=".$forge['id'].""; $forgeIMG = $forge['img'];
	if (empty($forge['img'])) $forgeIMG = "http://haloshare.org/css/images/".preg_replace('/\s+/', '', $forge['map']).".jpg";
	if ($forge['img'] != Thumb($forge['img'])) $forge['thumbnail'] = Thumb($forge['img']);
	$forge['img'] = $forgeIMG;
	$forgeCleanInf0 = removeBB($forge['info']);
	$forgeCleanInfo = str_ireplace('Posted on HaloShare', '', str_ireplace(':controller:','ðŸŽ®',$forgeCleanInf0));
	$forge['cleanInfo'] = preg_replace('/:[\s\S]+?:/', '', $forgeCleanInfo);
	//$fmmcount = $_SQL->query("SELECT `id` FROM `downloads` WHERE `map_id`='{$forge['id']}' AND `user`='4'") or die($_SQL->error);
	//$forge['FMMdownloads'] = $fmmcount->num_rows;
	if (isset($_GET['id'])) $forge['info'] = bb_parse(htmlentities($forge['info']));
	$forge['mapQuote'] = getMapQuote($forge['map']);
	$forge['gametype'] = ucwords($forge['gametype']); $isDrive = false;
	$forge['subTitle'] = strtok($forge['title'], ':');
	if ($forge['subTitle'] == $forge['title']) { $forge['subTitle'] = ''; }
	$forge['map'] = ucwords($forge['map']);
	$forgeV = $_SQL->query("SELECT id FROM views WHERE map_id = '".$forge['id']."'");
	$forge['views'] = "$forgeV->num_rows"; $dURL = '';
	$toRemove = substr($forge['title'], 0, strpos($forge['title'], ":")).': ';
	$forge['title'] = str_replace($toRemove, '', $forge['title']);
	if (!empty($forge['directURL'])) {
		if (stripos($forge['directURL'], "content/maps") !== FALSE) {
			$path = str_ireplace('//sandbox.map', '/sandbox.map', "../FILESHARE".$forge['directURL']."/sandbox.map");
			$xtra = json_decode(file_get_contents("http://127.0.0.1/file_details.php?enc&map=".base64_encode($path)));
			if ($xtra==null) $forge['extraDetails']="http://dewsha.re/file_details.php?enc&map=".base64_encode($path);
			$forge['directURL']="http://dewsha.re/share.php?map=".$forge['id'];
		} 
		else {
			$xtra = json_decode(file_get_contents("http://127.0.0.1/file_details.php?enc&map=".$forge['directURL']));
			if ($xtra==null) $forge['extraDetails']="http://dewsha.re/file_details.php?enc&map=".base64_encode($path);
			$forge['directURL']="http://dewsha.re/share.php?map=".$forge['directURL']; 
		}
		if ($xtra) {
			$forge['fileshareData']['mapID']=$xtra->ID; 
			$forge['fileshareData']['FileSize']=$xtra->FileSize; 
			$forge['fileshareData']['StartingObjCount']=$xtra->StartingObjCount; 
			$forge['fileshareData']['UserObjectsPlaced']=$xtra->UserObjectsPlaced; 
			$forge['fileshareData']['TotalObjectsPlaced']=$xtra->TotalObjectsPlaced; 
			$forge['fileshareData']['TotalObjectsLeft']=$xtra->TotalObjectsLeft; 
			$forge['fileshareData']['LastSaved']=$xtra->CreationDate; 
			//$forge['UploadDate']=$xtra->UploadDate; 
			$forge['fileshareData']['LastEditor']=$xtra->Author; 
		}
	}
	$_FORGE[] = $forge;
} 
$pageJson1 = json_encode($_PAGE, JSON_PRETTY_PRINT);
$pageJsonX = str_replace('"",', '
"PAGE_RESULTS":', $pageJson1);
$pageJson2 = str_replace('[
', '{
', $pageJsonX);
$pageJson = str_replace(']', ',', $pageJson2);
$mapsJson1 = json_encode($_FORGE, JSON_PRETTY_PRINT);
$mapsJsonX = str_replace("\\/", "/", $mapsJson1);
$mapsJson = str_replace('tdr', 'mapQuote', $mapsJsonX);
$mapsJson = str_replace('"creator":', '"Author":', $mapsJson);
if ($sql->num_rows > 0) {
if (isset($_GET['p'])) print_r("".$pageJson."\n\n\"MAP_RESULTS\":\n".$mapsJson."\n}");
else print_r("{
\"MAP_RESULTS\":
".$mapsJson."
}");
} ?>